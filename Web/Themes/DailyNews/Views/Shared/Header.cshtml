@using Core.Repositories
@model Web.Models.HeaderModel
@{ var themepath = "/Themes/DailyNews/Content";}


<header id="navigation">
    <div class="navbar" role="banner">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>

                <a class="navbar-brand" href="/">
                    <img class="main-logo img-responsive" src="@themepath/images/logo.png" alt="">
                </a>
            </div>
            <nav id="mainmenu" class="navbar-left collapse navbar-collapse">
                <a class="secondary-logo" href="/">
                    <img class="img-responsive" src="@themepath/images/logo.png" alt="">
                </a>
                <ul class="nav navbar-nav">
                    @foreach (var item in Model.MenuItems)
                    {
                        @RenderItemLine(item, 0, false)
                    }
                </ul>
            </nav>

            <div class="searchNlogin">
                <ul>
                    <li class="search-icon"><i class="fa fa-search"></i></li>
                </ul>
                <div class="search">
                    <form role="form">
                        <input type="text" class="search-form" autocomplete="off" placeholder="Type & Press Enter">
                    </form>
                </div>
            </div>
        </div>
    </div>
</header>



@helper RenderItemLine(MenuItem item, int level, bool responsiveMobileMenu)
{
var entityid = Request.RequestContext.RouteData.Values["entityid"];

//subcategories
var subCategories = responsiveMobileMenu ?
    //responsive (all categories)
    item.Children :
    //standard design (only categories with "IncludeInTopMenu")
    item.Children.ToList();
var levelClass = "";
if (level == 0)
{
    levelClass = "first-level";
}
var isactive = (level == 0 && entityid != null && item.EntityId.ToString() == entityid.ToString()) || entityid == null && item.Url == "/";


if (!item.IsMega)
{
    <li class="dropdown @(isactive? "active" : "")">
        @if (subCategories.Count > 0)
        {
            <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown">@item.Title <span class="caret"></span></a>
            <ul class="dropdown-menu @levelClass">
                @foreach (var subItem in subCategories)
                {
                    @RenderItemLine(subItem, level + 1, responsiveMobileMenu)
                }
            </ul>
        }
        else
        {
            <a href="#" >@item.Title</a>
        }
    </li>
}
else
{
    <li class="dropdown mega-dropdown">
        <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown">@item.Title <span class="caret"></span></a>
        <div class="dropdown-menu mega-menu">

            @if (item.WidgetId.HasValue)
            {
                @Html.Action("Render", "Widget")
            }
            else
            {
                foreach (var subItem in subCategories)
                {
                     <ul class="">
                         @if (subItem.Icon != null)
                         {
                             <li>
                                 <a href="@*@Url.RouteUrl(item.EntityName, new { subItem.EntityId })*@">
                                     @subItem.Title
                                 </a>
                             </li>

                         }
                         @foreach (var c in subItem.Children)
                         {
                             <li>
                                 <a href="@*@Url.RouteUrl(c.EntityName, new { c.EntityId })*@">
                                     @c.Title
                                 </a>
                             </li>
                         }
                     </ul>
                 }
            }
        </div>
    </li>
  
}

}