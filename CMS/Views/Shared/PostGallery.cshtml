@using CMS
@model List<Core.Repositories.MediaMini>


@*fine uploader container*@
<div id="postmediagallery">
</div>

<div id="uploadkocontainer">
    <ul data-bind="sortable: list" style="margin: 0;padding: 0"> 
        <li class="thumbnail">
            <a href="javascript:;">
                <img class="media-object" data-bind="attr:{ src: Path +'?width=300'}" src="" alt="no image" style="width: 300px; ">
            </a>
            <div class="caption">
                <button class="btn btn-danger" type="button" data-bind="click:$parent.removeItem">
                    @AppResources.Instance.Get("Remove")
                </button>
            </div>
          
            @*<input type="hidden" data-bind="attr:{name:$parent.nameForInput($index(), 'Id'),value:id}"/>
                <input type="hidden" data-bind="attr: { name: $parent.nameForInput($index(), 'Value') , value: url }"/>
                <input type="hidden" data-bind="attr: { name: $parent.nameForInput($index(), 'Key') , value: key }"/>*@
        </li>
    </ul>
    <input type="hidden" data-bind="value: ko.toJSON(list, null, 2)" name="Gallery" />
</div>


@*fine uploader template (keep it synchronized to \Content\fineuploader\templates\default.html)*@
<script type="text/template" id="postmediagallery-qq-template">
    <div class="qq-uploader-selector qq-uploader">
        <div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>
            <span>DropFiles</span>
        </div>
        <div class="qq-upload-button-selector btn btn-info " style="margin-bottom:10px">
            <div>@AppResources.Instance.Get("Upload")</div>
        </div>
        <span class="qq-drop-processing-selector qq-drop-processing">
            <span>Processing</span>
            <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>
        </span>
        <ul class="qq-upload-list-selector qq-upload-list">
            <li>
                <div class="qq-progress-bar-container-selector">
                    <div class="qq-progress-bar-selector qq-progress-bar"></div>
                </div>
                <span class="qq-upload-spinner-selector qq-upload-spinner"></span>
                @*<span class="qq-edit-filename-icon-selector qq-edit-filename-icon"></span>*@
                @*<span class="qq-upload-file-selector qq-upload-file"></span>*@
                @*<input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">
                    <span class="qq-upload-size-selector qq-upload-size"></span>
                    <a class="qq-upload-cancel-selector qq-upload-cancel" href="#">@T("Common.FileUploader.Cancel")</a>
                    <a class="qq-upload-retry-selector qq-upload-retry" href="#">@T("Common.FileUploader.Retry")</a>
                    <a class="qq-upload-delete-selector qq-upload-delete" href="#">@T("Common.FileUploader.Delete")</a>*@
                <span class="qq-upload-status-text-selector qq-upload-status-text"></span>
            </li>
        </ul>
    </div>
</script>
@{ var area = Site.AreaName;}
<script type="text/javascript">
    $(document).ready(function () {
        window.back.mulipleuploader.init(@Html.Raw(Model.Any()? Newtonsoft.Json.JsonConvert.SerializeObject(Model):"[]"));
        var postmediagallery = $("#postmediagallery");
        postmediagallery.fineUploader({
            request: {
                endpoint: '@(Url.Action("AsyncUpload", "Picture"))'
            },
            template: "postmediagallery-qq-template",
            multiple: true,
                validation: {
            allowedExtensions: ['jpeg', 'jpg', 'gif', 'png']
                }
        }).on("complete", function (event, id, name, responseJSON, xhr) {
            if (responseJSON.success) {
                window.back.mulipleuploader.addItem({ Id: responseJSON.pictureId, Path: responseJSON.imageUrl });
                postmediagallery.find(".qq-progress-bar-container-selector").hide();
            }
        });
    });
</script>